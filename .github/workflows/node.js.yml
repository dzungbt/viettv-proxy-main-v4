# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
jobs:
  build_de:
    runs-on: [self-hosted, proxy-main-v4-de]
    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    env:
      NODE_ENV: production
      VIET_TV_SERVER_URL: ${{secrets.PROXY_MAIN_V4_SERVER_URL}}
      REDIS_PORT: ${{secrets.PROXY_MAIN_V4_REDIS_PORT}}
      REDIS_HOST: ${{secrets.PROXY_MAIN_V4_REDIS_HOST}}
    steps:
    - name: Copy config file to temp folder
      run: cp /www/wwwroot/runners/proxy-main/viettv-proxy-main-v4/viettv-proxy-main-v4/config/config.json /project/temp/viettv-proxy-main-v4/config.json
    - uses: actions/checkout@v3
      with:
        ref: 'master'
    - name: Restore config file from temp folder
      run: cp /project/temp/viettv-proxy-main-v4/config.json /www/wwwroot/runners/proxy-main/viettv-proxy-main-v4/viettv-proxy-main-v4/config/config.json 

    - name: Create .env file
      run: echo "NODE_ENV=production" > .env
    - name: Update VIET_TV_SERVER_URL
      run: echo "VIET_TV_SERVER_URL=${{secrets.PROXY_MAIN_V4_SERVER_URL}}" > .env
    - name: Update REDIS_PORT
      run: echo "REDIS_PORT=${{secrets.PROXY_MAIN_V4_REDIS_PORT}}" > .env
    - name: Update REDIS_HOST
      run: echo "REDIS_HOST=${{secrets.PROXY_MAIN_V4_REDIS_HOST}}" > .env

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm i --init-module
    - name: Migrate to database
      run: npx sequelize-cli db:migrate --env=production
  deploy_de:
    needs: build_de
    runs-on: [self-hosted, proxy-main-v4-de]
    steps:
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.1.0
      continue-on-error: true
      with:

        host: ${{ secrets.PROXY_MAIN_V4_HOST }}
        username: ${{ secrets.PROXY_MAIN_V4_USERNAME }}
        password: ${{ secrets.PROXY_MAIN_V4_PW }}
        port: ${{ secrets.PROXY_MAIN_V4_PORT }}
        command_timeout: 10s
        script: |
          bash ${{ secrets.PROXY_MAIN_V4_EXECUTE_PATH }}/.github/workflows/reexecute.sh
          echo 'Deploy de done'
          exit

